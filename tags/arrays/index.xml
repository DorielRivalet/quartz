<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>arrays on</title><link>https://dorielrivalet.github.io/quartz/tags/arrays/</link><description>Recent content in arrays on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dorielrivalet.github.io/quartz/tags/arrays/index.xml" rel="self" type="application/rss+xml"/><item><title>nested-collections</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/nested-collections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/nested-collections/</guid><description>Metadata 2022-06-04 18:50 | nested-collections | Doriel Rivalet
Content use #dig to about errors when indexing arrays/hashes
This first example uses the second optional argument for the default value.</description></item><item><title>recursion</title><link>https://dorielrivalet.github.io/quartz/notes/open-source-society-university/recursion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/open-source-society-university/recursion/</guid><description>Metadata 2022-06-14 20:08 | recursion | Doriel Rivalet
Content But Yea another way that can help by knowing when to use sets or arrays, arrays that have non numerical keys are literally called dictionaries in certain other langs.</description></item><item><title>ruby-arrays</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-arrays/</guid><description>Metadata 2022-05-26 20:38
arrays
Content shovel operator &amp;lt;&amp;lt;
#shift and #unshift first elements pop and push last elements
1 num_array.</description></item></channel></rss>
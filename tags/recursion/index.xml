<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>recursion on</title><link>https://dorielrivalet.github.io/quartz/tags/recursion/</link><description>Recent content in recursion on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dorielrivalet.github.io/quartz/tags/recursion/index.xml" rel="self" type="application/rss+xml"/><item><title>euler-number</title><link>https://dorielrivalet.github.io/quartz/notes/miscellaneous/euler-number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/miscellaneous/euler-number/</guid><description>Metadata 2022-06-25 01:40 | euler-number | Doriel Rivalet
Content Concept of growth $$e\approx1.00000001^{100000000}$$ $$e:=\lim_{n\rightarrow\infty}(1+\frac1{n})^n$$ $$e=\sum_{n=0}^\infty \frac1{n!}$$ $$\frac{d}{dx}e^x=e^x$$ $$\int_1^t\frac{1}{x}dx=1$$
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include &amp;lt;stdio.</description></item><item><title>recursion</title><link>https://dorielrivalet.github.io/quartz/notes/open-source-society-university/recursion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/open-source-society-university/recursion/</guid><description>Metadata 2022-06-14 20:08 | recursion | Doriel Rivalet
Content But Yea another way that can help by knowing when to use sets or arrays, arrays that have non numerical keys are literally called dictionaries in certain other langs.</description></item></channel></rss>
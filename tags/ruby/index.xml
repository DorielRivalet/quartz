<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ruby on</title><link>https://dorielrivalet.github.io/quartz/tags/ruby/</link><description>Recent content in ruby on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dorielrivalet.github.io/quartz/tags/ruby/index.xml" rel="self" type="application/rss+xml"/><item><title>basic-enumerable-methods</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/basic-enumerable-methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/basic-enumerable-methods/</guid><description>Metadata 2022-06-03 18:42 | basic-enumerable-methods | Doriel Rivalet
Content The do is optional in a for loop in Ruby and may cause issues if used in IRB</description></item><item><title>conditional logic</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-conditional-logic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-conditional-logic/</guid><description>Metadata 2022-05-26 01:17
conditional logic
Content The only false values in Ruby are the values nil and false themselves
If there is only one line of code to be evaluated inside the block, then you can rewrite the code to be more succinct and take up only one line:</description></item><item><title>data-types</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-data-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-data-types/</guid><description>Metadata 2022-05-25 20:30
Data Types
Content It’s important to keep in mind that when doing arithmetic with two integers in Ruby, the result will always be an integer.</description></item><item><title>debugging</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/debugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/debugging/</guid><description>Metadata 2022-06-02 03:27 | debugging | Doriel Rivalet
Content repl stands for read evaluation print loop
examples are irb and pry</description></item><item><title>gemlist</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/gemlist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/gemlist/</guid><description>Metadata 2022-06-06 06:33 | gemlist | Doriel Rivalet
Content 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 *** LOCAL GEMS *** abbrev (default: 0.</description></item><item><title>hashes</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/hashes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/hashes/</guid><description>Metadata 2022-05-31 05:02 | hashes | Doriel Rivalet| #hashes #ruby #the-odin-project
Content As you can see, the values of a hash can be a number, a string, an array, or even another hash.</description></item><item><title>input-and-output</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/input-and-output/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/input-and-output/</guid><description>Metadata 2022-05-26 00:47
input and ouput
Content puts appends a new line to the argument passed in, whereas print keeps things all on one line.</description></item><item><title>methods</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/methods/</guid><description>Metadata 2022-06-01 22:28 | methods | Doriel Rivalet
Content implicit return
1 2 3 4 5 def my_name &amp;#34;Joe Smith&amp;#34; end puts my_name #=&amp;gt; &amp;#34;Joe Smith&amp;#34; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def even_odd(number) unless number.</description></item><item><title>nested-collections</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/nested-collections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/nested-collections/</guid><description>Metadata 2022-06-04 18:50 | nested-collections | Doriel Rivalet
Content use #dig to about errors when indexing arrays/hashes
This first example uses the second optional argument for the default value.</description></item><item><title>oop</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/oop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/oop/</guid><description>Metadata 2022-06-06 01:22 | oop | Doriel Rivalet
Content lambdas are nameless methods/functions
another name for properties are attributes
classes have properties and objects have attributes?</description></item><item><title>predicate-enumerable-methods</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/predicate-enumerable-methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/predicate-enumerable-methods/</guid><description>Metadata 2022-06-04 18:20 | predicate-enumerable-methods | Doriel Rivalet
Content a predicate method is indicated by a question mark (?) at the end of the method name and returns either true or false</description></item><item><title>ruby loops</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-loops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-loops/</guid><description>Metadata 2022-05-26 18:48
loops
Content 1 2 3 4 5 6 i = 0 loop do puts &amp;#34;i is #{i}&amp;#34; i += 1 break if i == 10 end 1 2 3 4 5 6 7 i = 0 while true do print(&amp;#34;i is &amp;#34;.</description></item><item><title>ruby variables</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-variables/</guid><description>Metadata 2022-05-25 23:38
Variables
Content |varName| local/private
do end {}
tokens do, make block end, finalize block {, make block }, finalize block</description></item><item><title>ruby-arrays</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-arrays/</guid><description>Metadata 2022-05-26 20:38
arrays
Content shovel operator &amp;lt;&amp;lt;
#shift and #unshift first elements pop and push last elements
1 num_array.</description></item><item><title>ruby-introduction</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/ruby-introduction/</guid><description>Sources Own notes
Metadata 2022-05-25 17:12
202205251705
Content Domain Specific Languages (DSL&amp;rsquo;s): Rails, Rspec
When you start learning programming in Ruby you’ll need three tools: A text editor, a terminal, and a Ruby runtime.</description></item><item><title>syntactic sugar</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/syntactic-sugar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/syntactic-sugar/</guid><description>Metadata 2022-06-04 19:11 | syntactic sugar | Doriel Rivalet
Content reminder for methods: readability, scalability, and maintainability
 If you write the following code:</description></item><item><title>truthy and falsy</title><link>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/truthy-and-falsy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dorielrivalet.github.io/quartz/notes/the-odin-project/ruby/truthy-and-falsy/</guid><description>Metadata 2022-06-04 18:31 | truthy and falsy | Doriel Rivalet
Content falsy: false and nil truthy: anything thats not falsy</description></item></channel></rss>